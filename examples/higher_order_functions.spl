main() {
	var hey = [];
	printList(lst) :: [Int] -> Int {
		if (empty(lst))
			return 0;
		print(lst.hd);
		return lst.hd + printList(lst.tl);
	}
	boolToInt(b) {
		if (b==True) {
			return 1;
		}
		return 0;
	}

	map(f, list) :: (a -> b) [a] -> [b]
	{
	  if( empty(list) )
	    return [];
	  else
	    return f(list.hd) : map(f, list.tl);
	}
	// Some operators wrapped in a function.
	plus(x, y) { return x + y; }
	and(b, c) { return b && c; }
	ge18(x) { return x >= 18; }

	foldl(f, z, list) :: (b a -> b) b [a] -> b
	{
	  if( empty(list) )
	    return z;
	  else
	    return foldl(f, f(z, list.hd), list.tl);
	}


	// Sums all the elements of an Int list.
	sum(list) { return foldl(plus, 0, list); }

	// Checks whether all elements in a list of Booleans are True
	all(list) { return foldl(and, True, list); }

	// Checks whether in a list of numbers everybody is older than 18
	allOlderThan18(list) { return all(map(ge18, list)); }

	hey = 19:22:[22];
	print(boolToInt(allOlderThan18(hey)));

	return 0;
}
var rien = main();
